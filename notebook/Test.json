{
	"name": "Test",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "6a404cdf-74ad-4309-8fde-c4a2d303f7a0"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/35c7c256-febc-4c53-82a5-71e8573a3c24/resourceGroups/rg-pmishra-training-001/providers/Microsoft.Synapse/workspaces/trainparmish/bigDataPools/Sparkpool",
				"name": "Sparkpool",
				"type": "Spark",
				"endpoint": "https://trainparmish.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					" **#One to Many Relationship**"
				]
			},
			{
				"cell_type": "code",
				"source": [
					"import pandas as pd\r\n",
					"# Sample data\r\n",
					"orders_data = {'order_id': [1, 2, 3, 4],\r\n",
					"               'customer_id': [101, 102, 101, 103],\r\n",
					"               'order_date': ['2023-01-01', '2023-02-01', '2023-02-15', '2023-03-01']}\r\n",
					"order_details_data = {'order_id': [1, 1, 2, 3, 3, 3],\r\n",
					"                      'product_id': [201, 202, 203, 204, 205, 206],\r\n",
					"                      'quantity': [2, 1, 3, 1, 2, 2]}\r\n",
					"# Create DataFrame for orders and order details\r\n",
					"orders_df = pd.DataFrame(orders_data)\r\n",
					"print(orders_df)\r\n",
					"order_details_df = pd.DataFrame(order_details_data)\r\n",
					"print(order_details_df)\r\n",
					"# Merge DataFrames to create one-to-many relationship\r\n",
					"merged_df = pd.merge(orders_df, order_details_df, on='order_id')\r\n",
					"print(merged_df)"
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"**Many-to-Many Relationship**"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pandas as pd\r\n",
					"# Sample data\r\n",
					"students_data = {'student_id': [1, 2, 3, 4],\r\n",
					"                 'student_name': ['Alice', 'Bob', 'Charlie', 'David']}\r\n",
					"courses_data = {'course_id': [101, 102, 103],\r\n",
					"                'course_name': ['Math', 'Science', 'History']}\r\n",
					"student_courses_data = {'student_id': [1, 1, 2, 3, 3],\r\n",
					"                        'course_id': [101, 102, 101, 102, 103]}\r\n",
					"# Create DataFrame for students, courses, and student courses\r\n",
					"students_df = pd.DataFrame(students_data)\r\n",
					"print(students_df)\r\n",
					"courses_df = pd.DataFrame(courses_data)\r\n",
					"print(courses_df)\r\n",
					"student_courses_df = pd.DataFrame(student_courses_data)\r\n",
					"print(student_courses_df)\r\n",
					"# Merge DataFrames to create many-to-many relationship\r\n",
					"merged_df = pd.merge(student_courses_df, students_df, on='student_id')\r\n",
					"merged_df = pd.merge(merged_df, courses_df, on='course_id')\r\n",
					"print(merged_df)"
				],
				"execution_count": 7
			}
		]
	}
}